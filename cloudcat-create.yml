---
- hosts: localhost
  connection: local
  vars:
    access: redactedxxx 
    secret: redactedyyy
    name: cloudcat-cracker
    image: ami-0ee246e709782b1be
    region: regionxxx
    type: typexxx
    ssh_key: sshxxx
    identity: identityxxx
    wordsnap: snapxxx
    #group:
  vars_files:
    - external_vars.yml

  tasks:
    - aws_caller_facts:
        aws_access_key: "{{ access }}"
        aws_secret_key: "{{ secret }}"
      register: caller_facts
    
    - name: Checking public IP address of localhost
      ipify_facts:
      register: ipify

# Create AWS security group when the localhost is the only IP that needs to interact with the instance
# OR
# Create AWS security group when the localhost is one of x IP addresses that need to access the instance
    - name: Creating AWS security group with one source IP address
      when: onegroup is defined
      ec2_group:
        aws_access_key: "{{ access }}"
        aws_secret_key: "{{ secret }}"
        region: "{{ region }}"
        name: cloudcat
        description: "Cloudcat security group"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ ipify.stdout }}"
      register: secgroup
            
    - name: Creating AWS security group with two source IP addresses
      when: guestip is defined
      ec2_group:
        aws_access_key: "{{ access }}"
        aws_secret_key: "{{ secret }}"
        region: "{{ region }}"
        name: cloudcat
        description: "Cloudcat security group"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ ipify.stdout }}"
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: "{{ guestip }}"
      register: secgroup

###
### END of security group block
###

###
### Start of Cracking AWS block
###
    
    - name: Creating EC2 instance
      ec2_instance:
        aws_access_key: "{{ access }}"
        aws_secret_key: "{{ secret }}"
        name: "{{ name }}"
        state: present
        security_group: "{{ secgroup.group_id  }}"
        image_id: "{{ image }}"
        instance_type: "{{ type }}"
        key_name: "{{ identity }}"
        region: "{{ region }}"
        wait_timeout: "300"
        wait: true
      register: ec2

    - name: Creating wordlist volume from public snapshot
      ec2_vol:
        aws_access_key: "{{ access }}"
        aws_secret_key: "{{ secret }}"
        instance: "{{ ec2.instance.0.instance_id }}"
        volume_size: "50"
        state: present
        region: "{{ region }}"
        snapshot: "{{ wordsnap }}"
        volume_type: "gp2"

    - debug:
        msg: "{{ type }} EC2 instance created. Located at {{ ec2.instance.0.public_ip_address }}"
    - set_fact:
        serverip: "{{ec2.instance.0.public_ip_address}}" 

    - name: Waiting for live SSH connection to AWS host
      wait_for:
        host: "{{ ec2.instances.0.public_ip_address }}"
        port: 22
        connect_timeout: 5
        timeout: 90

    - name: Instance live - adding host to in-memory inventory
      add_host:
        host: "{{ ec2.instances.0.public_ip_address }}"
        group: cloudcat
        ansible_ssh_private_key_file: "/home/{{ ansible_user_id}}/.ssh/{{ ssh_key_name }}"

- hosts: cloudcat
  remote_user: ubuntu
  become: true
  roles:
    - role: taskcat
