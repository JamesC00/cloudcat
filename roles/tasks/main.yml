---
- name: Updating packages
  apt:
    update_cache: yes
    upgrade: yes

- name: Checking kernel version for Linux headers
  command: uname -r
  register: version

- debug:
    msg: "Kernel version is {{ version.stdout }}"

- name: Downloading packages for Hashcat...
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - build-essential
    - "linux-headers-{{ version.stdout }}"
    - linux-image-extra-virtual
    - screen

- name: Blacklisting kernel modules
  blockinfile:
    create: yes
    path: /etc/modprobe.d/blacklist-nouveau.conf
    insertafter: EOF
    block: |
      blacklist nouveau
      blacklist lbm-nouveau
      options nouveau modeset=0
      alias nouveau off
      alias lbm-nouveau off

- name: Modifying nouveau-kms.conf
  lineinfile:
    create: yes
    path: /etc/modprobe.d/nouveau-kms.conf
    state: present
    insertafter: EOF
    line: "options nouveau modeset=0"

- name: Updating initramfs
  command: "update-initramfs -u"

- name: Checking if reboot is needed...
  block:
    - stat:
        path: /etc/modprobe.d/blacklist-nouveau.conf
      register: stat_result
    - debug:
      when: stat_result.stat.exists == 
        msg: "Moving to reboot now..."

- name: Rebooting server to apply changes
  reboot:
  # ONLY REBOOT SERVER IF IT HASN'T BEEN DONE BEFORE. CHECK THE MODPROBE FILE TO SEE IF THIS MAY HAVE ALREADY BEEN DONE.

####
#### Post-reboot: Setting up Hashcat
####

- name: Reboot successful. Mounting wordlist volumes.
  block:
    - file:
        path: /newvolume/
        state: directory
        mode: '0666'
    - mount:
        path: /newvolume/
        src: /dev/xvdf
        opts: bind
        fstype: none
        state: mounted

- name: Downloading Hashcat and NVIDIA drivers
  block:
    - name: NVIDIA drivers
      get_url:
        url: http://us.download.nvidia.com/tesla/410.104/NVIDIA-Linux-x86_64-410.104.run
        dest: /opt/
        mode: '0555'
    - name: Hashcat
      get_url:
        url: https://hashcat.net/files/hashcat-5.1.0.tar.gz
        dest: /opt/
        mode: '0666'

- name: Installing NVIDIA drivers
  command: "/bin/bash NVIDIA-Linux-x86_64-410.104.run --ui=none --no-questions --silent -X"
  args:
    chdir: /opt/

- name: Extracting Hashcat to /opt/ directory
  unarchive:
    remote_src: yes
    src: /opt/hashcat-5.1.0.tar.gz
    dest: /opt/

- name: Compiling Hashcat
  command: make
  args:
    chdir: /opt/hashcat-5.1.0

- name: Copying hashes for cracking
  block:
    - file:
        path: /opt/hashes/
        state: directory
        mode: '0755'
    - copy:
        src: files/hashes.txt
        dest: /opt/hashes/
        owner: root
        group: root
        mode: 0666

####
#### Hashcat exection statements
####

- name: Executing hashcat against hashfile
  when: short|default(false)
  command: "./hashcat -a 0 -m {{ hashmode }} /opt/hashes/hashes.txt /newvolume/rockyou.txt -r /opt/rules/OneRuleToRuleThemAll.rule -o cracked.txt"
  args:
    chdir: /opt/hashcat-5.1.0

- name: Executing hashcat against hashfile
  when: medium|default(false)
  command: "./hashcat -a 0 -m {{ hashmode }} /opt/hashes/hashes.txt /newvolume/rockyou.txt /newvolume/fav_wordlist.lst -r /opt/rules/OneRuleToRuleThemAll.rule -o cracked.txt"
  args:
    chdir: /opt/hashcat-5.1.0

- name: Executing hashcat against hashfile
  when: long|default(false)
  command: "./hashcat -a 0 -m {{ hashmode }} /opt/hashes/hashes.txt /newvolume/rockyou.txt /newvolume/fav_wordlist.lst /newvolume/crackstation.lst -r /opt/rules/OneRuleToRuleThemAll.rule -o cracked.txt"
  args:
    chdir: /opt/hashcat-5.1.0

####
#### End of Hashcat execution statements
####

- debug:
  when: long|medium|default(false)
    msg: "Medium or long hash cracking mode has been chosen, access the server to check on cracking progress with 'ssh -i ~/.ssh/your-key-here ubuntu@{{ ec2.instances.0.public_ip_address }}"

- name: Cracking complete, reading outfile
  when: short|default(false)
  command: "cat /opt/hashcat-5.1.0/cracked.txt"
  register: cracked

- debug:
  when: short|default(false)
    msg: "The following hashes were recovered: {{ cracked.stdout }}"

- debug:
    msg: "Remote execution complete! Returning to local execution..."
